import { useEffect, useState, useMemo } from "react";

let videos = [];

function useIsInViewport(ref) {
  const [isIntersecting, setIsIntersecting] = useState(false);

  const observer = useMemo(
    () =>
      new IntersectionObserver(([entry]) => {
        setIsIntersecting(entry.isIntersecting);
        if (entry.isIntersecting) {
          videos.forEach((video) => {
            if (video !== ref.current) {
              video.pause();
            }
          });
        }
      }),
    []
  );

  useEffect(() => {
    videos.push(ref.current);
    observer.observe(ref.current);

    return () => {
      videos = videos.filter((video) => video !== ref.current);
      observer.disconnect();
    };
  }, [ref, observer]);

  return isIntersecting;
}

export default useIsInViewport;
